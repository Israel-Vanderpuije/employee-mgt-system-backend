#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.hibernate.show-sql=true
#spring.datasource.url=jdbc:mysql://localhost:3306/employee_manager
#spring.datasource.username=root
#spring.datasource.password=
#spring.datasource.testWhileIdle=true
#spring.datasource.initialization-mode=always
#spring.datasource.initialize=true

#spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
#spring.datasource.username=postgres
#spring.datasource.password=password
#spring.jpa.hibernate.ddl-auto=create-drop
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.properties.hibernate.format_sql=true
#server.error.include-message=always

spring.datasource.jdbc-url=jdbc:postgresql://localhost:5432/employee_manager
spring.datasource.username=postgres
spring.datasource.password=password
spring.datasource.pool-size=30
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true
server.error.include-message=always
spring.jpa.generate-ddl=true
#Add these two additional lines this will ensure that script-based initialization is performed using schema.sql and data.sql directly.
spring.datasource.initialization-mode=always
spring.jpa.hibernate.ddl-auto=none
